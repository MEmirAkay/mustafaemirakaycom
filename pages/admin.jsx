import Head from "next/head";
import { React, useEffect, useState } from "react";
import Link from "next/link";
import { server } from "../config";
import Modal from "react-modal";
import axios from "axios";
import { useRouter } from "next/router";


export default function Admin({ dataX }) {
  const router = useRouter();
  const [articleID, setArticleID] = useState("");
  const [data, setData] = useState("");
  const [modalIsOpen, setIsOpen] = useState(false);
  const [control, setControl] = useState(false);

  const customStyles = {
    content: {
      top: '50%',
      left: '50%',
      right: 'auto',
      bottom: 'auto',
      marginRight: '-50%',
      transform: 'translate(-50%, -50%)',
    },
  };

  useEffect(() => {
    setData(dataX);
    checkTokens();
  }, []);

  function checkTokens() {


    (typeof localStorage.getItem("login_token") !== "undefined" && typeof localStorage.getItem("api_token") !== "undefined" && localStorage.getItem("login_token") !== null && localStorage.getItem("api_token") !== null) ? (
      console.log("girme"),
      axios.post(`${server}/api/admin/token`, { login_token: localStorage.getItem("login_token"), api_token: localStorage.getItem("api_token") })
        .then((res) => {
          if (res.data.status == "Success") {
            setControl(true);
          } else {
            setControl(false);
          }
        })
        .catch((error) => { console.log(error) })

    ) : (setControl(false), router.push("/login"))
  }

  function openModal(id) {
    setArticleID(id);
    setIsOpen(true);
  }

  function closeModal(e) {
    if (e == "yes") {
      fetch(`${server}/api/admin/delete`, {
        method: "POST",
        headers:{api_token: JSON.parse(localStorage.api_token)},
        body: JSON.stringify({
          idx: articleID
        })
      }).then(() => {
        setIsOpen(false);
        
        router.reload(window.location.href);

      })
        .catch(e => console.log(e));;
    } else {
      setIsOpen(false);

    }
    
    
  }

  return (
    (control) ? (<div className="flex flex-col w-full h-full pb-20">
      <Head>
        <title>MEA</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="flex flex-col pb-20">

        <button className="hover:shadow-md duration-300 w-full h-20 text-white font-bold bg-red-500" onClick={() => { localStorage.clear(), localStorage.removeItem("login_token"), localStorage.removeItem("api_token"), router.push("/login") }}>Logout</button>

      </div>

      <div className="flex mx-auto w-9/12">

        <Modal
          isOpen={modalIsOpen}
          onRequestClose={() => { closeModal("no") }}
          ariaHideApp={false}
          style={customStyles}
          contentLabel="Example Modal"
        >
          <div className=" grid grid-cols-2 grid-rows-2">
            <div className=" text-center col-span-2">
              <h2>Yazıyı silmek istediğinize emin misiniz?</h2>
            </div>
            <div className="">
              <button onClick={() => { closeModal("yes") }} className=" border-2 rounded-lg hover:text-white outline-none focus:border-green-400 hover:bg-green-400 duration-300 px-5 py-2">Evet</button>
              <button onClick={() => { closeModal("no") }} className=" border-2 rounded-lg hover:text-white outline-none focus:border-red-400 hover:bg-red-400 duration-300 px-5 py-2">Hayır</button>
            </div>
          </div>
        </Modal>

        <table className="table-auto border-2 mx-auto w-full">
          <thead>
            <tr>
              <th className="border-2">Başlık</th>
              <th className="border-2">Yayın Tarihi</th>
              <th className="border-2" colSpan="2">İşlem</th>
            </tr>
          </thead>
          <tbody>
            {data &&
              data.map((e) => (
                <tr className=" text-lg" key={e._id}>
                  
                  <td className=" px-5 border-2">{e.header}</td>
                  <td className=" px-5 border-2">{e.date}</td>

                  <td className="w-3/12  h-20 border-y-2">
                    <Link href="/edit/[id]" as={`/edit/${e._id}`}>
                      <button className=" hover:shadow-md duration-300 w-full h-full text-white font-bold bg-amber-400">Edit</button>
                    </Link>
                  </td>
                  <td className="w-3/12   h-20 border-y-2">

                    <button onClick={() => { openModal(e._id) }} className=" hover:shadow-md duration-300 w-full h-full text-white font-bold bg-red-500" >Delete</button>

                  </td>
                </tr>
              ))}
            <tr>
              <td colSpan="4">
                <Link href="/submitnew">
                  <button className="font-semibold hover:text-white outline-none focus:border-green-400 hover:bg-green-400 duration-300 w-full h-20">Yeni Ekle +</button>
                </Link>
              </td>
            </tr>
          </tbody>
        </table>
      </div>
    </div>
    ) : (
      <div>
        Unauthorized
      </div>
    )

  );
}

export async function getServerSideProps() {
  const res = await fetch(`${server}/api/admin/article`, {
    method: "GET",
    
  });
  try {
    const dataX = await res.json();
    return {
      props: {
        dataX,
      },
    };
  } catch (err) {
    console.log("Error: ", err.message);
    return err.message;
  }
}
